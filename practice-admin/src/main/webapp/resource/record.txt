两个提取关键词的方法：
HanLP.extractKeywords(), HanLP.extractPhrases().

评论:肾宝，资格的正品好药，吃了效果好，这是第二次买这个宝宝了！！！
HanLP.extractKeywords():[正品, 效果, 资格, 宝宝, 肾宝]
HanLP.extractPhrases():[资格正品] maybe , it seems more like a remark-tag.

评论 : 质量好，服务好，物流快，全五分。。
extractKeywords(): [物流, 质量, 服务, 全五分]
extractPhrases(): [] is null .

为每个类别设置状态
0 for logistical（物流）58条 , 1 for quality（质量）17条,  2 for service（服务）14 ,3 for negative remark（差评）5 ,
4 for pretty （好评）395, 5 for neutral remark（中评）107 .6 for price（价格）3


构建一个不断学习的分词器，用户输入一条评论之后，在确认它的分类之后，然后纳入词库。

分类还可以再细一点，不仅仅是物流方面，还可以是说物流好的，说物流不好的，说质量好的，说质量不好的。
（在测试大的分类完成之后再想这个）

分词的算法，要根据商城的实际情况，来重写提关键词算法。
这个要改提关键词的算法，但感觉这个对实际影响不大，因为做词库和对评论分析，都是用的同一种
方法提的关键词，
但是这个可以用做评论标签的时候改算法，来提取适用于商城的关键词

现在分类的效果不是很理想，有一些许的偏差。可能是样本量（600条评论太少），
可以考虑加入学习算法，不断的扩充样本量
即在构造分类器时，原始的是600。在输入一条评论后，由程序对这条评论以600为基数进行分析，然后由人工来确定最终分类
人工确定分类之后，将确定分类的这条评论加入到样本中，即现在样本有 601条，然后再用程序重新构造分类器